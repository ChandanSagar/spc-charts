kind: DaemonSet
apiVersion: apps/v1beta2
metadata:
  name: csi-anf-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: csi-anf-node
  template:
    metadata:
      labels:
        app: csi-anf-node
    spec:
      serviceAccount: csi-anf-node
      hostNetwork: true
      containers:
        - name: csi-driver-registrar
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.0.2
          args:
            - "--csi-address=/csi/csi.sock"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
          env:
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/anf.csi.netapp.com/csi.sock
          imagePullPolicy: "Always"
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/anf.csi.netapp.com-reg.sock"]
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: cluster-driver-registrar
          image: quay.io/k8scsi/csi-cluster-driver-registrar:v1.0.1
          args:
            - "--csi-address=/csi/csi.sock"
            - "--pod-info-mount-version=v1"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-anf-node
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          args :
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--subscriptionid=$(AZURE_SUBSCRIPTION_ID)"
            - "--tenantid=$(AZURE_TENANT_ID)"
            - "--clientid=$(AZURE_CLIENT_ID)"
            - "--clientsecret=$(AZURE_CLIENT_SECRET)"
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: AZURE_SUBSCRIPTION_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "anf-csi-driver.fullname" . }}
                  key: azure-subscription-id
            - name: AZURE_TENANT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "anf-csi-driver.fullname" . }}
                  key: azure-tenant-id
            - name: AZURE_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "anf-csi-driver.fullname" . }}
                  key: azure-client-id
            - name: AZURE_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "anf-csi-driver.fullname" . }}
                  key: azure-client-secret
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: pods-mount-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: device-dir
              mountPath: /dev
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/anf.csi.netapp.com
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
        # The following mounts are required to trigger host udevadm from container
        - name: udev-rules-etc
          hostPath:
            path: /etc/udev
            type: Directory
        - name: udev-rules-lib
          hostPath:
            path: /lib/udev
            type: Directory
        - name: udev-socket
          hostPath:
            path: /run/udev
            type: Directory
        - name: sys
          hostPath:
            path: /sys
            type: Directory
