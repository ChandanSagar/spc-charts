apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  external_scheme: https
  external_hostname: gitlab.{{ .Values.externalHostname }}
  registry_external_scheme: https
  registry_external_hostname: registry.{{ .Values.externalHostname }}
  mattermost_external_scheme: https
  mattermost_external_hostname: mattermost.{{ .Values.externalHostname }}
  mattermost_app_uid: aadas
  ## This is used by GitLab Omnibus as the primary means of configuration.
  ## ref: https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template
  ##
  gitlab_omnibus_config: |
    root_pass = ENV['GITLAB_ROOT_PASSWORD'];
    gitlab_rails['initial_root_password'] = root_pass unless root_pass.to_s == '';
    external_url "#{ENV['GITLAB_EXTERNAL_SCHEME']}://#{ENV['GITLAB_EXTERNAL_HOSTNAME']}"
    registry_external_url "#{ENV['GITLAB_REGISTRY_EXTERNAL_SCHEME']}://#{ENV['GITLAB_REGISTRY_EXTERNAL_HOSTNAME']}"
    mattermost_external_url "#{ENV['GITLAB_MATTERMOST_EXTERNAL_SCHEME']}://#{ENV['GITLAB_MATTERMOST_EXTERNAL_HOSTNAME']}"

    gitlab_rails['initial_shared_runners_registration_token'] = ENV['GITLAB_INITIAL_SHARED_RUNNERS_REGISTRATION_TOKEN']

    nginx['enable'] = false
    registry_nginx['enable'] = false
    mattermost_nginx['enable'] = false

    gitlab_workhorse['listen_network'] = 'tcp'
    gitlab_workhorse['listen_addr'] = '0.0.0.0:8005'

    mattermost['service_address'] = '0.0.0.0'
    mattermost['service_port'] = '8065'

    registry['registry_http_addr'] = '0.0.0.0:8105'

    postgresql['enable'] = false
    gitlab_rails['db_host'] = ENV['DB_HOST']
    gitlab_rails['db_password'] = ENV['DB_PASSWORD']
    gitlab_rails['db_username'] = ENV['DB_USER']
    gitlab_rails['db_database'] = ENV['DB_DATABASE']

    redis['enable'] = false
    gitlab_rails['redis_host'] = ENV['REDIS_HOST']

    mattermost['file_directory'] = '/gitlab-data/mattermost';
    mattermost['sql_driver_name'] = 'postgres';
    mattermost['sql_data_source'] = "user=#{ENV['DB_USER']} host=#{ENV['DB_HOST']} port=5432 dbname=mattermost_production password=#{ENV['DB_PASSWORD']} sslmode=disable";
    mattermost['gitlab_enable'] = true;
    mattermost['gitlab_secret'] = ENV['MATTERMOST_APP_SECRET'];
    mattermost['gitlab_id'] = ENV['MATTERMOST_APP_UID'];
    mattermost['gitlab_scope'] = '';
    mattermost['gitlab_auth_endpoint'] = "#{ENV['GITLAB_EXTERNAL_SCHEME']}://#{ENV['GITLAB_EXTERNAL_HOSTNAME']}/oauth/authorize";
    mattermost['gitlab_token_endpoint'] = "#{ENV['GITLAB_EXTERNAL_SCHEME']}://#{ENV['GITLAB_EXTERNAL_HOSTNAME']}/oauth/token";
    mattermost['gitlab_user_api_endpoint'] = "#{ENV['GITLAB_EXTERNAL_SCHEME']}://#{ENV['GITLAB_EXTERNAL_HOSTNAME']}/api/v3/user"

    manage_accounts['enable'] = true
    manage_storage_directories['manage_etc'] = false

    gitlab_shell['auth_file'] = '/gitlab-data/ssh/authorized_keys'
    git_data_dir '/gitlab-data/git-data'
    gitlab_rails['shared_path'] = '/gitlab-data/shared'
    gitlab_rails['uploads_directory'] = '/gitlab-data/uploads'
    gitlab_ci['builds_directory'] = '/gitlab-data/builds'
    gitlab_rails['registry_path'] = '/gitlab-registry'
    gitlab_rails['trusted_proxies'] = ["10.0.0.0/8","172.16.0.0/12","192.168.0.0/16"]

    prometheus['listen_address'] = '0.0.0.0:9090'
    postgres_exporter['enable'] = true
    postgres_exporter['env'] = {
      'DATA_SOURCE_NAME' => "user=#{ENV['DB_USER']} host=#{ENV['DB_HOST']} port=5432 dbname=#{ENV['DB_DATABASE']} password=#{ENV['DB_PASSWORD']} sslmode=disable"
    }
    redis_exporter['enable'] = true
    redis_exporter['flags'] = {
      'redis.addr' => "#{ENV['REDIS_HOST']}:6379",
    }
  ##
  gitlab_post_reconfigure_code: |
    Doorkeeper::Application.where(uid: ENV["MATTERMOST_APP_UID"]).first_or_create(
      name: "GitLab Mattermost",
      secret: ENV["MATTERMOST_APP_SECRET"],
      redirect_uri: "#{ENV["GITLAB_MATTERMOST_EXTERNAL_SCHEME"]}://#{ENV["GITLAB_MATTERMOST_EXTERNAL_HOSTNAME"]}/signup/gitlab/complete\r\n#{ENV["GITLAB_MATTERMOST_EXTERNAL_SCHEME"]}://#{ENV["GITLAB_MATTERMOST_EXTERNAL_HOSTNAME"]}/login/gitlab/complete")

    PrometheusService.where(template: true).first_or_create(
      active: true, api_url: "http://localhost:9090")

    KubernetesService.where(template: true).first_or_create(
      active: true,
      api_url: "https://#{ENV["KUBERNETES_SERVICE_HOST"]}:#{ENV["KUBERNETES_SERVICE_PORT"]}",
      token: File.read("/var/run/secrets/kubernetes.io/serviceaccount/token"),
      ca_pem: File.read("/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"))
  ##
  gitlab_post_reconfigure_script: |
    /opt/gitlab/bin/gitlab-rails runner -e production "$GITLAB_POST_RECONFIGURE_CODE"
