# Default values for prometheus.

rbac:
  enabled: false

prometheus:
  baseImage: quay.io/prometheus/prometheus
  version: v1.7.1
  replicas: 2
  retention: 24h
  # enable ingress to expose promethues at [name].[namespace].[domain]
  ingress:
    enabled: false
    domain: prometheus.example.com
  # set type to NodePort in order to expose prometheus through kube-proxy
  service:
    type: NodePort
    nodePort: 30900
  ## (1) storage can be set to use local emptyDir
  useEmptyDirStorage: true
  ## (2) storage can be acquired by labels on persistent volumes
  # storage:
  #   selector:
  #     matchLabels:
  #       prom-storage: "yes"
  #   resources:
  #     requests:
  #       storage: 100Gi
  ## (3) storage can be dyanmically provisioned from a storageclas
  # storage:
  #   class: ssd
  #   resources:
  #     requests:
  #       storage: 100Gi
  storage:
  resources:
    requests:
      cpu: 200m
      memory: 1500Mi
    limits:
      cpu: 1500m
      memory: 3000Mi

alertmanager:
  version: v0.7.1
  replicas: 2
  # full contents of the alertmanager.yml configuration packaged into a secret
  config:
    global:
      # set as a default value here for all slack notifications
      slack_api_url: https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX
      # resolve alerts if they stop firing
      resolve_timeout: 5m
    route:
      group_by: ['job']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'slack_notification'
      routes:
      - match:
          severity: critical
        receiver: slack_notification
    receivers:
    - name: slack_notification
      slack_configs:
      - channel: "#kubernetes"
        text: "cluster: stackpointcloud\ndescription: {{ .CommonAnnotations.description }}\nsummary: {{ .CommonAnnotations.summary }}"
        send_resolved: True
        icon_emoji: ':lantern:'
    - name: email

# a service monitor that will enable scraping on the "metrics" port for any
# service with labels that match
serviceMonitor:
  metricsAnyNamespace:
    matchLabel: metrics
    matchValue: enabled
