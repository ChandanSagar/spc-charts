{{- if default "" .Values.instanceId }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
      annotations:
        # Automatically Roll Deployments When ConfigMaps or Secrets change
        checksum/config: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
#        command: ["/bin/bash", "-c",
#          "sed -i \"s/environment ({'GITLAB_ROOT_PASSWORD' => initial_root_password }) if initial_root_password/environment ({'GITLAB_ROOT_PASSWORD' => initial_root_password, 'GITLAB_SHARED_RUNNERS_REGISTRATION_TOKEN' => node['gitlab']['gitlab-rails']['initial_shared_runners_registration_token'] })/g\" /opt/gitlab/embedded/cookbooks/gitlab/recipes/database_migrations.rb && exec /assets/wrapper"]
        env:
        ## General GitLab Configs
        ##
        # This is a free-form env var that GitLab Omnibus uses to configure
        # everything. We're passing this in from a configmap and pulling some
        # of the values from the env vars defined below. This is done to
        # avoid leaving secrets visible in kubectl.
        - name: GITLAB_OMNIBUS_CONFIG
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: gitlab_omnibus_config
        - name: GITLAB_ROOT_PASSWORD
        {{- if default "" .Values.gitlabRootPassword }}
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: gitlab-root-password
        {{ end }}
        - name: GITLAB_EXTERNAL_SCHEME
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: external_scheme
        - name: GITLAB_EXTERNAL_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: external_hostname
        - name: GITLAB_REGISTRY_EXTERNAL_SCHEME
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: registry_external_scheme
        - name: GITLAB_REGISTRY_EXTERNAL_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: registry_external_hostname
        - name: GITLAB_MATTERMOST_EXTERNAL_SCHEME
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: mattermost_external_scheme
        - name: GITLAB_MATTERMOST_EXTERNAL_HOSTNAME
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: mattermost_external_hostname
        - name: GITLAB_INITIAL_SHARED_RUNNERS_REGISTRATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: initial_shared_runners_registration_token
        - name: MATTERMOST_APP_UID
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: mattermost_app_uid
        - name: MATTERMOST_APP_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: mattermost_app_secret
        ## DB configuration
        ##
        - name: DB_HOST
          value: {{ template "postgresql.fullname" . }}
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: db-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: db-password
        - name: DB_DATABASE
          value: {{ .Values.postgresql.postgresDatabase | quote }}
        ## Redis configuration
        ##
        - name: REDIS_HOST
          value: {{ template "redis.fullname" . }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: redis-password
        - name: GITLAB_POST_RECONFIGURE_CODE
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: gitlab_post_reconfigure_code
        - name: GITLAB_POST_RECONFIGURE_SCRIPT
          valueFrom:
            configMapKeyRef:
              name: {{ template "fullname" . }}
              key: gitlab_post_reconfigure_script
        ports:
        - name: ssh
          containerPort: 22
        - name: workhorse
          containerPort: 8005
        - name: mattermost
          containerPort: 8065
        - name: registry
          containerPort: 8105
        - name: prometheus
          containerPort: 9090
        # livenessProbe:
        #   httpGet:
        #     path: /help
        #     port: 8005
        #   # This pod takes a very long time to start up. Be cautious when
        #   # lowering this value to avoid Pod death during startup.
        #   initialDelaySeconds: 200
        #   timeoutSeconds: 1
        #   periodSeconds: 10
        #   successThreshold: 1
        #   failureThreshold: 10
        # readinessProbe:
        #   httpGet:
        #     path: /help
        #     port: 8005
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 1
        #   periodSeconds: 10
        #   successThreshold: 1
        #   failureThreshold: 3
        volumeMounts:
        - name: gitlab-config
          mountPath: /etc/gitlab
        - name: gitlab-data
          mountPath: /gitlab-data
        - name: gitlab-registry
          mountPath: /gitlab-registry
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
      - name: gitlab-config
      {{- if .Values.persistence.gitlabConfig.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-config
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: gitlab-data
      {{- if .Values.persistence.gitlabData.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-data
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: gitlab-registry
      {{- if .Values.persistence.gitlabRegistry.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}-registry
      {{- else }}
        emptyDir: {}
      {{- end }}
{{ else }}
{{ end }}
